#!/bin/python3

# Author: J. M. Gdaniec, Jan 2021

from lab_common import *

import argparse
import requests
import json
import sys
import traceback

# Main:

def main():

   set_dbg_volume_level(0)

   action_choices = ["status", "state", "forceoff", "off", "on"]

   parser = argparse.ArgumentParser()
   parser.add_argument("machine" )
   parser.add_argument("action", nargs="?", choices=action_choices, default="status")
   LabBMCConnection.add_bmc_login_argument_definitions(parser)

   args = parser.parse_args()

   machine = args.machine
   action  = args.action

   bmc_conn = LabBMCConnection.create_connection(machine, args)

   action = action.lower()
   if action in ["status", "state"]:
      resp = bmc_conn.get_power_state()
      print(resp)

   elif action in ["forceoff", "off"]:
      resp = bmc_conn.system_power_off()

   elif action in ["on"]:
      resp = bmc_conn.system_power_on()

   else:
      emsg("Unrecognized actoin: %s" % action)
      exit(1)

if __name__ == "__main__":
   try:
      main()
   except BMCRequestError as exc:
      die(str(exc))
   except Exception:
      traceback.print_exc()
      die("Unhandled exception!")

